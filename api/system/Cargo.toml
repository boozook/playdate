[package]
name = "playdate-system"
version = "0.3.16"
readme = "README.md"
description = "High-level System API built on-top of Playdate API"
keywords = ["playdate", "sdk", "api", "gamedev"]
categories = ["game-development", "api-bindings", "no-std"]
edition.workspace = true
license.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true


[features]


[dependencies.sys]
workspace = true
features = ["alloc"]

[dependencies.callback]
workspace = true
optional = true
features = ["sys", "tracing"]

[dev-dependencies.display]
workspace = true


# [[example]]
# name = "handler-boxed"
# crate-type = ["dylib", "staticlib"]
# path = "examples/handler-boxed.rs"
# required-features = ["sys/entry-point", "sys/lang-items"]

# [[example]]
# name = "handler-static"
# crate-type = ["dylib", "staticlib"]
# path = "examples/handler-static.rs"
# required-features = ["sys/entry-point", "sys/lang-items"]

# [[example]]
# name = "handler-pinned"
# crate-type = ["dylib", "staticlib"]
# path = "examples/handler-pinned.rs"
# required-features = ["sys/entry-point", "sys/lang-items"]

[[example]]
name = "serial-message"
crate-type = ["dylib", "staticlib"]
path = "examples/set-serial-message-callback.rs"
required-features = ["sys/entry-point", "sys/lang-items", "callback"]

# [[example]]
# name = "update-state-in-serial-message-callback"
# crate-type = ["dylib", "staticlib"]
# path = "examples/update-state-in-serial-message-callback.rs"
# required-features = ["sys/entry-point", "sys/lang-items"]

[package.metadata.playdate]
bundle-id = "rs.playdate.system"


[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs", "--show-type-layout"]
default-target = "thumbv7em-none-eabihf"
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples", "-Zbuild-std=core,alloc"]


[lints.rust.unexpected_cfgs]
level = "deny"
check-cfg = [
	'cfg(pdtrace, values("all", "cb-add", "cb-rem", "cb-call"))', # tracing
]
